/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'

const ResourcesIndexLazyRouteImport = createFileRoute('/resources/')()
const PostsPostLazyRouteImport = createFileRoute('/posts/$post')()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResourcesIndexLazyRoute = ResourcesIndexLazyRouteImport.update({
  id: '/resources/',
  path: '/resources/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/resources/index.lazy').then((d) => d.Route),
)
const PostsPostLazyRoute = PostsPostLazyRouteImport.update({
  id: '/posts/$post',
  path: '/posts/$post',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/posts/$post.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/posts/$post': typeof PostsPostLazyRoute
  '/resources': typeof ResourcesIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/posts/$post': typeof PostsPostLazyRoute
  '/resources': typeof ResourcesIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/posts/$post': typeof PostsPostLazyRoute
  '/resources/': typeof ResourcesIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/posts/$post' | '/resources'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/posts/$post' | '/resources'
  id: '__root__' | '/' | '/posts/$post' | '/resources/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostsPostLazyRoute: typeof PostsPostLazyRoute
  ResourcesIndexLazyRoute: typeof ResourcesIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/resources/': {
      id: '/resources/'
      path: '/resources'
      fullPath: '/resources'
      preLoaderRoute: typeof ResourcesIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$post': {
      id: '/posts/$post'
      path: '/posts/$post'
      fullPath: '/posts/$post'
      preLoaderRoute: typeof PostsPostLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostsPostLazyRoute: PostsPostLazyRoute,
  ResourcesIndexLazyRoute: ResourcesIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
